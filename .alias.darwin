# Nav
alias l='ls -alhO'
alias ll='ls -alhO@'

# Utils
alias x2b='plutil -convert binary1'
alias b2x='plutil -convert xml1'
alias rmdsstore='find . -name "*.DS_Store" -exec rm {} \;'
alias pplist='/usr/libexec/PlistBuddy -c "Print"'
alias plistbuddy='/usr/libexec/PlistBuddy'
alias plisteditor='open -b com.apple.PropertyListEditor'
alias listallkext='kextstat -l'
alias listkext='kextstat -l | grep -v apple'

show_desktop_icons()
{
    defaults write com.apple.finder CreateDesktop -bool true
    restart_finder
}

hide_desktop_icons()
{
    defaults write com.apple.finder CreateDesktop -bool false
    restart_finder
}

restart_finder()
{
    osascript <<EOF
tell application "Finder"
    quit
end tell
EOF
    open -a Finder
}

appsetting()
{
    #maybe a more powerful python version someday
    if [[ -z $1 ]] || [[ -z $2 ]]; then
        printf "Usage: appsetting [language code] /path/to/app"
        printf "\n"
        printf "Language code list:\n\t"
        printf "defaults read 'Apple Global Domain' AppleLanguages"
        printf "\n"
        printf "Example:\n\t"
        printf "appsetting \"zh-Hans en ja\" /Applications/Mail.app"
        printf "\n"
        return 0
    fi

    DIR_PATH="$(dirname $2)"
    APP_PATH="$(basename $2)"
    BUNDLE_ID="$(/usr/libexec/PlistBuddy -c "print :CFBundleIdentifier" "${DIR_PATH}/${APP_PATH}"/Contents/Info.plist)"
    if [[ ! -z $BUNDLE_ID ]]; then
        #set -x
        LANGS=$1
        #zsh
        setopt shwordsplit
        defaults delete "$BUNDLE_ID" AppleLanguages 2>/dev/null
        for lang in $LANGS; do
            defaults write "$BUNDLE_ID" AppleLanguages -array-add $lang
        done
        unsetopt shwordsplit
        #set +x
    fi
}
